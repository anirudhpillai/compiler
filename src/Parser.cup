/*
 * Docs here: https://www.cs.princeton.edu/~appel/modern/java/CUP/manual.html
*/
   
/* ----------------------Preliminary Declarations Section--------------------*/
import java_cup.runtime.*;

/* Parser code to change the way the parser reports errors (include
   line and column number of the error). */
parser code {:
    public boolean syntaxErrors;

    public void syntax_error(Symbol current_token) {
        report_error(
            "Syntax error at line " + (current_token.left+1) + ", column "
            + current_token.right, null
        );
    }

    public void report_error(String message, Object info) {

        StringBuilder m = new StringBuilder("Error");

        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);

            if (s.left >= 0) {
                m.append(" in line "+(s.left+1));
                if (s.right >= 0)
                    m.append(", column "+(s.right+1));
            }
        }

        m.append(" : "+message);

        System.err.println(m);
    }

    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }
:};
   

   
/* ------------Declaration of Terminals and Non Terminals Section----------- */


terminal           SEMI, EQ, EQEQ, PLUS, MINUS, TIMES, DIVIDE, CARET;

// Brackets
terminal           L_ROUND, R_ROUND, L_CURLY, R_CURLY;

// Types
terminal           INTEGER, BOOLEAN, CHARACTER, RATIONAL, FLOAT;
terminal           DICTIONARY, SEQUENCE, VOID;

// Keywords
terminal           MAIN, LEN, IN, ALIAS, READ, PRINT, RETURN;

terminal           TYPEDEF, FUNCTION_DEF;

terminal           IF, FI, THEN, ELSE_IF, ELSE, WHILE, FORALL, DO, OD;

// TODO
terminal           ID, NUMBER;


non terminal       main;
non terminal       comment, identifier;
non terminal       dict, seq, number, character;
non terminal       declaration;

main  ::=  MAIN L_CURLY R_CURLY SEMI;
